@page "/demo-oninit"
@* dùng để kết nối đến server khác *@

@inject HttpClient _http
@* gán url tuỳ theo url  *@
@inject NavigationManager _nav
@* cách gọi api *@
<div class="container">
    <button class="btn btn-dark" @onclick="getDataApi">Tải data</button>
    <div class="form-group">
        <label for="">Categories</label>
        <select class="form-control d-inline-block w-25">
            @foreach(string item in lstCategory)
            {
                <option>@item</option>
            }
        </select>
    </div>
    <div class="row">
        @foreach (ProductModelAPI item in lst)
        {

            <div class="col-md-4 mt-2">
                <div class="card">
                    <img src="@item.Img" alt="" height="300" style="object-fit: cover;" />
                    <div class="card-body">
                        <h1 class="card-title">@item.Name</h1>
                        <p class="card-text">@item.Price</p>
                        <button class="btn btn-success">Buy</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code
{
    public List<ProductModelAPI>? lst = new List<ProductModelAPI>();
    @* gọi nhiều api , bất đồng bộ thì dùng async *@
    public List<string> lstCategory = new List<string>();
    public async Task getDataApi()
    {
        try
        {
            List<ProductModelAPI>? data = await
            _http.GetFromJsonAsync<List<ProductModelAPI>>("https://svcy.myclass.vn/api/ProductApi/getall");
            lst = data;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"{ex.Message}");
        }

    }
    async Task getDataFileJson()
    {
        try
        {
            List<string>? data = await
            _http.GetFromJsonAsync<List<string>?>($"{_nav.BaseUri}/Data/Data.json");
            lstCategory = data;
            Console.WriteLine($"{JsonSerializer.Serialize(data)}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"{ex.Message}");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        @* dùng cho bất đồng bộ *@
        // hàm chạy đầu tiên sau khi component load html (thường dùng để lấy data hoặc gọi api)
        await getDataApi();
        await getDataFileJson();
    }

    protected override void OnInitialized()
    {
        
    }
}